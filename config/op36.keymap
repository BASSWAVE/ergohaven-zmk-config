#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <50>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <75>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <75>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };

        hmr2: hmr2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <75>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&mo>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
            label = "HMR2";
        };

        hml2: hml2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <75>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&mo>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
            label = "HML2";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &kp Q        &kp W      &kp E         &kp R          &kp T                          &kp Y  &kp U    &kp I         &kp O      &kp P
  &hml LGUI A  &hml2 4 S  &hml LSHFT D  &hml2 5 F      &kp G                          &kp H  &kp J    &hmr RSHFT K  &hmr2 4 L  &kp SINGLE_QUOTE
  &kp Z        &kp X      &kp C         &kp V          &kp B                          &kp N  &kp M    &kp COMMA     &kp DOT    &kp SLASH
                                        &kp BACKSPACE  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp TAB
            >;
        };

        nav {
            bindings = <
  &kp LG(TAB)      &kp LG(W)        &kp LG(E)         &kp LG(R)         &kp ESC                       &kp ESC        &kp HOME                 &kp END                 &kp MINUS         &kp EQUAL
  &hml LGUI LG(A)  &hml LALT LG(S)  &hml LSHFT LG(D)  &hml LCTRL LG(F)  &kp DELETE                    &kp BACKSPACE  &hmr RIGHT_CONTROL LEFT  &hmr RIGHT_SHIFT RIGHT  &kp DOWN          &kp UP
  &kp LG(Z)        &kp LG(X)        &kp LG(C)         &kp LG(V)         &kp LG(B)                     &kp PAGE_DOWN  &kp UP                   &kp DOWN                &kp SINGLE_QUOTE  &kp BACKSLASH
                                                      &trans            &trans      &trans    &trans  &mo 3          &trans
            >;
        };

        sym {
            bindings = <
  &kp N1    &kp N2    &kp N3     &kp N4     &kp N5                    &kp N6  &kp N7     &kp N8     &kp N9         &kp N0
  &kp LGUI  &kp LALT  &kp LSHFT  &kp LCTRL  &none                     &none   &kp RCTRL  &kp RSHFT  &kp RIGHT_ALT  &kp RIGHT_GUI
  &none     &none     &none      &none      &none                     &none   &none      &none      &none          &none
                                 &trans     &mo 3   &trans    &trans  &trans  &trans
            >;
        };

        adj {
            bindings = <
  &bootloader   &kp F1        &kp F2         &kp F3         &kp F4                     &bt BT_SEL 0  &bt BT_SEL 1                          &bt BT_SEL 2       &bt BT_SEL 3        &bt BT_CLR
  &kp LGUI      &hml LALT F5  &hml LSHFT F6  &hml LCTRL F7  &kp F8                     &out OUT_BLE  &hmr RCTRL C_VOL_DN                   &hmr RSHFT C_MUTE  &hmr LALT C_VOL_UP  &kp RGUI
  &kp CAPSLOCK  &kp F9        &kp F10        &kp F11        &kp F12                    &out OUT_USB  &kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT  &kp C_PP           &kp C_NEXT          &studio_unlock
                                             &trans         &trans   &trans    &trans  &trans        &trans
            >;
        };

        layer_4 {
            bindings = <
  &none      &kp EXCL      &kp AT     &kp HASH     &none                    &none             &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE
  &kp TILDE  &kp PIPE      &kp AMPS   &kp PERCENT  &none                    &kp LESS_THAN     &kp COLON             &kp KP_EQUAL           &kp KP_MINUS    &kp UNDER
  &kp GRAVE  &kp ASTERISK  &kp CARET  &kp DOLLAR   &none                    &kp GREATER_THAN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PLUS        &kp BACKSLASH
                                      &trans       &none  &trans    &trans  &none             &trans
            >;
        };

        layer_5 {
            bindings = <
  &none  &none  &none  &none   &none                    &none  &kp N7  &kp N8  &kp N9  &none
  &none  &none  &none  &none   &none                    &none  &kp N4  &kp N5  &kp N6  &kp N0
  &none  &none  &none  &none   &none                    &none  &kp N1  &kp N2  &kp N3  &none
                       &trans  &none  &trans    &trans  &none  &trans
            >;
        };
    };
};
