#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <50>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <75>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <75>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };

        hmr2: hmr2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <75>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&mo>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
            label = "HMR2";
        };

        hml2: hml2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <75>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&mo>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
            label = "HML2";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &kp Q  &kp W      &kp E         &kp R          &kp T                          &kp Y  &kp U    &kp I         &kp O      &kp P
  &kp A  &hml2 4 S  &hml LSHFT D  &kp F          &kp G                          &kp H  &kp J    &hmr RSHFT K  &hmr2 4 L  &kp SINGLE_QUOTE
  &kp Z  &kp X      &kp C         &kp V          &kp B                          &kp N  &kp M    &kp COMMA     &kp DOT    &kp SLASH
                                  &kp BACKSPACE  &to 1  &kp SPACE    &kp ENTER  &to 2  &kp TAB
            >;
        };

        sym {
            bindings = <
  &none   &none   &none   &none   &none                     &none   &none   &none   &none   &none
  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
  &none   &none   &none   &none   &none                     &none   &none   &none   &none   &none
                          &trans  &to 0   &trans    &trans  &mo 3   &trans
            >;
        };

        nav {
            bindings = <
  &kp TAB  &kp W  &kp E           &kp R             &kp ESC                                   &kp DELETE  &kp U     &kp I      &kp O    &kp P
  &kp A    &kp S  &kp LEFT_SHIFT  &kp F             &kp G                                     &kp H       &kp LEFT  &kp DOWN   &kp UP   &kp RIGHT
  &kp Z    &kp X  &kp C           &kp V             &kp B                                     &kp N       &kp M     &kp COMMA  &kp DOT  &kp FSLH
                                  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND    &trans  &to 0       &trans
            >;
        };

        adj {
            bindings = <
  &bootloader   &kp F1        &kp F2         &kp F3         &kp F4                     &bt BT_SEL 0  &bt BT_SEL 1                          &bt BT_SEL 2       &bt BT_SEL 3        &bt BT_CLR
  &kp LGUI      &hml LALT F5  &hml LSHFT F6  &hml LCTRL F7  &kp F8                     &out OUT_BLE  &hmr RCTRL C_VOL_DN                   &hmr RSHFT C_MUTE  &hmr LALT C_VOL_UP  &kp RGUI
  &kp CAPSLOCK  &kp F9        &kp F10        &kp F11        &kp F12                    &out OUT_USB  &kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT  &kp C_PP           &kp C_NEXT          &studio_unlock
                                             &trans         &trans   &trans    &trans  &trans        &trans
            >;
        };

        layer_4 {
            bindings = <
  &none      &kp EXCL  &kp AT     &kp HASH     &none                    &kp STAR       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE
  &kp TILDE  &kp PIPE  &kp AMPS   &kp PERCENT  &none                    &kp PLUS       &kp COLON             &kp KP_EQUAL           &kp KP_MINUS    &kp UNDER
  &kp GRAVE  &none     &kp CARET  &kp DOLLAR   &none                    &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LESS_THAN   &kp GREATER_THAN
                                  &trans       &none  &trans    &trans  &none          &trans
            >;
        };
    };
};
